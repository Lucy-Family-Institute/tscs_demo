select(Q7_1:Q7_10) %>%
mutate(across(everything()), ~str_replace_all(.x,"\u2019t", "\\'"))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything()), ~str_replace_all(.x,"\\u2019t", "\\'"))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything()), .funs=~str_replace_all(.x,"\\u2019t", "\\'"))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything()), ~str_replace_all(.,"\\u2019t", "\\'"))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything()), ~str_replace_all("\\u2019t", "\\'"))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything()), ~str_replace_all(.,"\\u2019t", "\\'"))
?str_replace_all
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything()), ~str_replace(.,"\\u2019t", "\\'"))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything(), ~str_replace(.,"\\u2019t", "\\'")))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything(), ~str_replace(.,"\\u2019t", "\\'"))) %>%
pivot_longer(everything()) %>%
filter(!is.na(value)) %>%
count(value)
ggplot(aes(fct_rev(fct_infeq(y=value))) %>%
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything(), ~str_replace(.,"\\u2019t", "\\'"))) %>%
pivot_longer(everything()) %>%
filter(!is.na(value)) %>%
ggplot(aes(fct_rev(fct_infeq(y=value)))) %>%
geom_bar()
mysurvey %>%
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything(), ~str_replace(.,"\\u2019t", "\\'"))) %>%
pivot_longer(everything()) %>%
filter(!is.na(value)) %>%
ggplot(aes(fct_rev(fct_infeq(y=value)))) %>%
geom_bar()
mysurvey %>%
mutate(Q10 = parse_number(gsub("\\$", "", Q10) )) %>%
filter(!is.na(Q10)) %>%
mutate(count = n(),
prop = sum(Q10>=45)/count,
median= median(Q10)) %>%
ggplot(aes(Q10)) +
geom_histogram()+
geom_vline(xintercept = 45, color="red")+
geom_vline(aes(xintercept = median), color="blue")+
theme_bw()+
labs(x="Desired Monthly Cost", y="Number of Respondents")+
geom_text(aes(label=
paste0(round(prop[1],3)*100, "% willing to pay adult membership cost"), x= 160, y =200))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything(), ~str_replace(.,"\\u2019t", "\\'"))) %>%
pivot_longer(everything()) %>%
filter(!is.na(value)) %>%
ggplot(aes(fct_rev(fct_infreq(y=value)))) +
geom_bar()
mysurvey %>%
mutate(Q10 = parse_number(gsub("\\$", "", Q10) )) %>%
filter(!is.na(Q10)) %>%
mutate(count = n(),
prop = sum(Q10>=45)/count,
median= median(Q10)) %>%
ggplot(aes(Q10)) +
geom_histogram()+
geom_vline(xintercept = 45, color="red")+
geom_vline(aes(xintercept = median), color="blue")+
theme_bw()+
labs(x="Desired Monthly Cost", y="Number of Respondents")+
geom_text(aes(label=
paste0(round(prop[1],3)*100, "% willing to pay adult membership cost"), x= 160, y =200))
mysurvey %>%
select(Q7_1:Q7_10) %>%
mutate(across(everything(), ~str_replace(.,"\\u2019t", "\\'"))) %>%
pivot_longer(everything()) %>%
filter(!is.na(value)) %>%
ggplot(aes(y=fct_rev(fct_infreq(value)))) +
geom_bar()
mysurvey %>%
select(starts_with("Q11")) %>%
pivot_longer(everything()) %>%
mutate(name = factor(name)) %>%
mutate(name = fct_recode(name,
"Fitness and Health"    = "Q11_1",
"Adult Sports Leagues"      = "Q11_2",
"Youth Sports Leagues" = "Q11_3",
"Recreational Sports" = "Q11_4",
"Aquatics"        = "Q11_5",
"Fine Art Opportunities"      = "Q11_6",
"Kids' After-School"    = "Q11_7",
"Educational Programs"      = "Q11_8",
"Senior Programs" = "Q11_9",
"Faith-Based Programs" = "Q11_10")) %>%
ggplot(aes(y=fct_reorder(name, value, median), x=value)) +
geom_boxplot()+
theme_bw()+
labs(y="Program", x="Allocated Budget")
mysurvey %>%
select(starts_with("Q13")) %>%
pivot_longer(everything()) %>%
mutate(name = factor(name)) %>%
mutate(name = fct_recode(name,
"E-Gaming"    = "Q13_1",
"Lacrosse"      = "Q13_2",
"Drawing" = "Q13_3",
"Oil Painting" = "Q13_4",
"Money Management"        = "Q13_5",
"College Preparedness"      = "Q13_6",
"ESL/ELL"    = "Q13_7",
"Cooking"      = "Q13_8",
"Snorkeling" = "Q13_9",
"Aqua HIIT" = "Q13_10")) %>%
mutate(value = fct_relevel(as.factor(value),
c("Extremely unlikely", "Somewhat unlikely", "Neither likely nor unlikely",
"Somewhat likely", "Extremely likely"))) %>%
filter(!is.na(value)) %>%
group_by(name) %>%
mutate(sum = sum(value=="Extremely likely", na.rm=T)) %>%
ggplot(aes(y=fct_reorder(name, sum, .fun=median), fill=fct_rev(value)))+
geom_bar(position="fill")+
scale_fill_viridis_d()+
theme_bw()+
labs(x="", y="Potential Programs", fill="Likely Participation")
mysurvey %>%
filter(!is.na(Q34)) %>%
separate(Q34, c("Zip_6", "Zip_4"))%>%
ggplot(aes(y=fct_rev(fct_infreq(Zip_6))))+
geom_bar()
mysurvey %>%
mutate(Q10 = parse_number(gsub("\\$", "", Q10) )) %>%
filter(!is.na(Q10)) %>% summarize(median)
mysurvey %>%
mutate(Q10 = parse_number(gsub("\\$", "", Q10) )) %>%
filter(!is.na(Q10)) %>% summarize(median(Q10))
mysurvey %>%
filter(!is.na(Q34)) %>%
separate(Q34, c("Zip_6", "Zip_4"))%>%
ggplot(aes(y=fct_rev(fct_infreq(Zip_6))))+
geom_bar()+
labs(title="Home Zip, All Respondents", x="Respondents", y="Zip")
View(mysurvey)
mysurvey %>%
filter(!is.na(Q34) & !is.na(Q7_7)) %>%
separate(Q34, c("Zip_6", "Zip_4"))%>%
ggplot(aes(y=fct_rev(fct_infreq(Zip_6))))+
geom_bar()+
labs(title="Home Zip, All Respondents", x="Respondents", y="Zip")
if (!require("pacman")) install.packages("pacman", repos = "https://cloud.r-project.org")
pacman::p_load("tidyverse", "data.table", "readstata13", "plm", "bife", "survival", "brglm2", "ivreg", "lmtest", "tseries", "plotly")
#setwd()
set.seed(1015)
sample <- 200
x <- rnorm(sample, 0, 2)
e <- rnorm(sample, 0 , 10)
y <- 3 + x + e
univariate <- data.frame(y, x)
univariate
plot<-univariate %>%
ggplot(aes(x, y)) +
geom_point()
ggplotly(plot)
univariate$pred <- predict(lm(y~x, data=univariate))
univariate$resid <- univariate$y - univariate$pred
resid_plot<-univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_smooth(method = "lm", se=F)+
geom_segment(aes(xend=x, yend = pred), color="red")
ggplotly(resid_plot)
coef(lm(y~x, data=univariate))
mean_x <- mean(x)
mean_y <- mean(y)
beta1_hat <-(sum((univariate$x - mean_x)*(univariate$y - mean_y)))/(sum((univariate$x-mean_x)^2))
beta0_hat <- mean_y - beta1_hat*mean_x
print(c(beta0_hat, beta1_hat))
x1 <- rnorm(sample, 0, 5)
x2 <- 2*x1 + rnorm(sample, 0, 5)
y <- 2*x1-x2+rnorm(sample, 0,5)
multivariate <- data.frame(x1, x2, y)
multi_plot<-plot_ly(multivariate, x = ~x1, y = ~x2, z = ~y)
multi_plot<-multi_plot %>%
add_markers()
multi_plot
multivariate$resid <- residuals(lm(x1~x2, multivariate))
partial <- lm(y~resid, multivariate)
full <- lm(y~x1+x2, multivariate)
print(c(coef(partial), coef(full)))
short <- lm(y~x1, multivariate)
print(coef(short))
aux <- lm(x2~x1, multivariate)
coef(full)[2] + coef(full)[3]*coef(aux)[2]
univariate$y_hat = beta0_hat + beta1_hat * univariate$x
rss = sum((univariate$y_hat - univariate$y)^2)
se_beta1 <- sqrt(
(rss/(sample-2))/
sum((univariate$x - mean_x)^2)
)
t <- beta1_hat/se_beta1
p <- 2*pt(abs(t), df=sample-2, lower=F)
print(c(t, p))
lm <- lm(y~x, data=univariate)
summary(lm)
plot(lm)
data<-read.dta13("ms_mil_spend_data.dta")
data %>%
filter(ccode==2, year==2000)
data %>%
dplyr::arrange(ccode, year) %>%
dplyr::select(ccode, year, LMILEX, v2x_polyarchy)
data %>%
dplyr::filter(ccode %in% c(2,20)) %>%
ggplot(aes(x=year, y=LMILEX)) +
geom_line() +
facet_wrap(~ccode)
summary(data$LMILEX)
#Between unit variation
data %>%
group_by(ccode) %>%
summarize(between=mean(na.omit(LMILEX)))%>%
dplyr::select(between) %>%
ungroup() %>%
summary()
#Within unit variation
data %>%
group_by(ccode) %>%
mutate(between=mean(na.omit(LMILEX)),
within=LMILEX-mean(na.omit(LMILEX))) %>%
dplyr::select(within) %>%
ungroup() %>%
summary()
#Monte Carlo simulations to better control the relationships
N<-seq(1,5,1)
Time<-seq(1,50,1)
clean<-expand.grid(N, Time)
names(clean)<-c("N", "Time")
clean<- clean %>%
dplyr::arrange(N, Time)
tibble(clean)
#Draw the IV, DV, error
clean$X<-rnorm(nrow(clean), 1, .25)
clean$Y<-3-2*clean$X+rnorm(nrow(clean), 0, .5)
tibble(clean)
#Run the pooled model
clean_pool<-lm(Y~X, data=clean)
summary(clean_pool)
#Plot to understand why this worked
clean %>%
ggplot(aes(x=X, y=Y))+
geom_point(aes(color=as.factor(N)))+
geom_smooth(method="lm", se=F)
#Monte Carlo simulations to better control the relationships
N<-seq(1,5,1)
Time<-seq(1,50,1)
dirty<-expand.grid(N, Time)
names(dirty)<-c("N", "Time")
dirty<- dirty %>%
dplyr::arrange(Time, N)
#Draw the unobserved effect, IV, DV, error
Z<-rnorm(length(unique(dirty$N)), 0, .5)
dirty$Z<-rep(Z, length(Time))
dirty$X<-dirty$Z+rnorm(nrow(dirty), 1, .25)
dirty$Y<-3-2*dirty$X+4*dirty$Z+rnorm(nrow(dirty),0, .5)
#Run the pooled model
dirty_pool<-lm(Y~X, data=dirty)
summary(dirty_pool)
#Plot the pooled model - what are we looking at?
dirty %>%
ggplot(aes(x=X, y=Y))+
geom_point()+
geom_smooth(method="lm", se=F)
dirty %>%
ggplot(aes(x=X, y=Y))+
geom_point(aes(color=as.factor(N)))+
geom_smooth(method="lm", se=F)
#Plot the per unit regressions
dirty %>%
ggplot(aes(x=X, y=Y, color=as.factor(N)))+
geom_point()+
geom_smooth(method="lm", se=F)
fe<-plm(Y~X, dirty, index=c("N", "Time"), method="within")
summary(fe)
demean<-dirty %>%
dplyr::arrange(N,Time)%>%
dplyr::group_by(N) %>%
dplyr::mutate(mean_X=mean(X),
mean_Y=mean(Y),
demean_X=X-mean_X,
demean_Y=Y-mean_Y)
demean
fe_manual<-lm(demean_Y~demean_X-1, data=demean)
summary(fe_manual)
demean %>%
ggplot(aes(x=demean_X, y=demean_Y))+
geom_point(aes(color=as.factor(N)))+
geom_smooth(method="lm", se=F)
fe_dummy <-
lm(Y~X+as.factor(N)-1, data=dirty)
summary(fe_dummy)
summary(fe_manual)
summary(fe)
summary(fe)
sd(dirty$X)
coef(fe)*sd(dirty$X)
sd(demean$demean_X)
coef(fe)*sd(demean$demean_X)
time_inv<-dirty
time_inv$K<-ifelse(dirty$N<=2, 1, 0)
time_inv$Y<-3-2*time_inv$X+4*time_inv$Z-3*time_inv$K+rnorm(nrow(time_inv),0, .5)
drop_model<-plm(Y~X+K, model="within", index = c("N", "Time"), data=time_inv)
summary(drop_model)
#Why not?
time_inv %>%
group_by(N) %>%
mutate(var_k=K-mean(K)) %>%
ungroup() %>%
select(var_k) %>%
summary()
data %>%
group_by(ccode) %>%
summarize(var_dem=var(na.omit(vdem_dem)))
logit<-clogit(vdem_dem~LMILEX+strata(ccode), data=data)
summary(logit)
penalized_fe<-glm(vdem_dem~LMILEX+as.factor(ccode), data=data,
familty="binomial"(link="logit"), method="brglmFit")
summary(penalized_fe)
#Make some data to better control the relationships
N<-seq(1,5,1)
Time<-seq(1,50,1)
random<-expand.grid(N, Time)
names(random)<-c("N", "Time")
random<- random %>%
dplyr::arrange(Time, N)
#Draw the unobserved effect, IV, DV, error
Z<-rnorm(length(unique(random$N)), -2, .5)
random$Z<-rep(Z, length(Time))
random$X<-rnorm(nrow(random), 1, .25)
random$Y<-3-2*random$X+4*random$Z+rnorm(nrow(random),0, .5)
#Run the pooled model
random_pool<-lm(Y~X, data=random)
summary(random_pool)
#Plot the pooled model - what are we looking at?
random %>%
ggplot(aes(x=X, y=Y))+
geom_point(aes(color=as.factor(N)))+
geom_smooth(method="lm", se=F)
#Plot unit intercepts/slopes
random %>%
ggplot(aes(x=X, y=Y, color=as.factor(N)))+
geom_point()+
geom_smooth(method="lm", se=F)
#RE estimator
re<-plm(Y~X, random, model = "random")
summary(re)
#True error
random$error <-random$Y-(3-2*random$X+4*random$Z)
#Get estimated error from pooled model
random$resid<-resid(random_pool)
random %>%
dplyr::select(error, resid) %>%
pivot_longer(cols = everything()) %>%
ggplot()+
geom_histogram(aes(value, fill=name, alpha=.2))+
guides(alpha="none")
e_resid = sum((random$resid)^2)/248
e_error = sum((random$error)^2)/250
e_resid
e_error
# How does this affect beta se and t-stats?
sqrt(e_resid / sum((random$X - mean(random$X))^2))
sqrt(e_error / sum((random$X - mean(random$X))^2))
summary(random_pool)
summary(re)
coeftest(random_pool, vcov=vcovHC(random_pool, type = "HC0", group="N"))
#Make some data to better control the relationships
N_large<-seq(1,5000,1)
Time<-seq(1,50,1)
random_large<-expand.grid(N_large, Time)
names(random_large)<-c("N", "Time")
random_large<- random_large %>%
dplyr::arrange(Time, N)
#Draw the unobserved effect, IV, DV, error
Z_large<-rnorm(length(unique(random_large$N)), -2, .5)
random_large$Z<-rep(Z_large, length(Time))
random_large$X<-rnorm(nrow(random_large), 1, .25)
random_large$Y<-3-2*random_large$X+4*random_large$Z+rnorm(nrow(random_large),0, .5)
#Run the pooled model
random_pool_large<-lm(Y~X, data=random_large)
summary(random_pool_large, cluster="N")
large_e_error <- sum((random_large$Y -(2*random_large$X+4*random_large$Z))^2)/(length(N_large))
sqrt(large_e_error / sum((random_large$X - mean(random_large$X))^2))
#Fit a FE model to the same data
fe<-plm(Y~X, random, model = "within")
#Hausman Test
phtest(fe, re)
#Note, order of the arguments does not matter
#Can also calculate the Hausman statistic by hand
t(coef(fe) - coef(re)[2])%*% solve(vcov(fe)-vcov(re)[2,2]) %*% (coef(fe)-coef(re)[2])
#We'll fit the second equation to our RE data
#First, we have to group demean
demean_random<-random %>%
dplyr::arrange(N,Time)%>%
group_by(N) %>%
mutate(mean_X=mean(X),
demean_X=X-mean_X)
# Now include both X terms in the RE model
rebw<-plm(Y~demean_X + mean_X, demean_random, model = "random")
coef(rebw)
coef(fe)
#Mundlak formulation
mundlak<-plm(Y~X + mean_X, demean_random, model = "random")
coef(mundlak)
#Check how our data look
data %>%
dplyr::select(c(ccode, year, LMILEX, v2x_polyarchy)) %>%
filter(ccode<100) %>%
pivot_longer(cols = c(LMILEX, v2x_polyarchy), values_to = "values")%>%
ggplot(aes(y=values, x=year, color=as.factor(ccode)))+
geom_line()+
facet_wrap(~name, scales="free_y")
errors <- rnorm(1001,0,1)
unit_root <- cumsum(errors)
unit_root_data <- data.frame(error=errors, unit_root=unit_root, time=seq(1,1001,1))
unit_root_data <- unit_root_data %>%
mutate(stationary1 = .5*dplyr::lag(error)+rnorm(1,0,1),
stationary2 = .9*dplyr::lag(error)+rnorm(1,0,1),
first_diff = unit_root - dplyr::lag(unit_root))
unit_root_data %>%
dplyr::select(-error) %>%
pivot_longer(-time) %>%
ggplot(aes(y=value, x=time, color=name))+
geom_line()
apply(unit_root_data, 2, function(x) tseries::adf.test(na.omit(x)))
pvals <- NULL
for (i in unique(data$ccode)){
try(dfuller <- adf.test(data[data$ccode==i, "LMILEX"], k = 1))
pvals<-rbind(pvals, dfuller$p.value)
}
head(pvals)
#Choi's P-value
test_stat<- -2*sum(log(na.omit(pvals)))
test_stat
#That's going to reject, but let's get a p-value for completeness
#Test is distributed chi2(2N) where N is panels
round(pchisq(test_stat, df=2*nrow(na.omit(pvals)), lower.tail = F), digits=3)
#Difference these out to be safe
fd<-pdata.frame(data, index = c("ccode", "year"))
fd$d_lmilex=diff(fd$LMILEX)
fd$d_polyarchy=diff(fd$v2x_polyarchy)
fd %>%
dplyr::select(c(ccode, year, d_lmilex, d_polyarchy)) %>%
filter(ccode %in% seq(2,99,1)) %>%
pivot_longer(cols = c(d_lmilex, d_polyarchy), values_to = "values")%>%
ggplot(aes(y=values, x=year, color=as.factor(ccode)))+
geom_point()+
facet_wrap(~name, scales="free_y")
static<-lm(d_lmilex~d_polyarchy, data=fd)
summary(static)
#Illustrate the impact of 1 SD change in polyarchy (temporary)
time<-seq(1,10,1)
dem<-c(rep(0,2),
sd(na.omit(fd$d_polyarchy)),
rep(0, 7))
pred_dat<-cbind.data.frame(time,dem)
pred_dat$milex_hat<-pred_dat$dem*coef(static)[2]
pred_dat %>%
ggplot(aes(x=time, y=milex_hat))+
geom_line()
fd$lag_polyarchy=lag(fd$d_polyarchy)
fd$lag_lmilex=lag(fd$d_lmilex)
lag1<-lm(d_lmilex~d_polyarchy+lag_polyarchy, data=fd)
summary(lag1)
pred_dat<-pred_dat %>%
mutate(lag_dem=dplyr::lag(dem))
pred_dat$milex_hat<-pred_dat$dem*coef(lag1)[2]+pred_dat$lag_dem*coef(lag1)[3]
pred_dat %>%
ggplot(aes(x=time, y=milex_hat))+
geom_line()
ldv<-lm(d_lmilex~lag_lmilex+d_polyarchy, data=fd)
summary(ldv)
pred_dat[1:3,]$milex_hat<-coef(ldv)[3]*pred_dat[1:3,]$dem
pred_dat[4:10,]$milex_hat<-coef(ldv)[2]^(pred_dat[4:10,]$time-3)*coef(ldv)[3]*pred_dat[3,"dem"]
pred_dat %>%
ggplot(aes(x=time, y=milex_hat))+
geom_line()
#What about a permanent shift?
coef(ldv)
lrm<-coef(ldv)[3]*sd(na.omit(fd$d_polyarchy))/(1-coef(ldv)[2])
lrm
pbgtest(d_lmilex~lag_lmilex+d_polyarchy, data=fd, model="pooling", order=1)
ldv<-plm(d_lmilex~lag_lmilex+d_polyarchy, data=fd, model="pooling")
res_df <- data.frame(residual = residuals(ldv), attr(residuals(ldv), "index"))
res_df<- res_df %>%
left_join(fd, by=c("ccode", "year"))
res_df$lag_res <- lag(res_df$residual)
res_df<-plm::pdata.frame(res_df, index=c("ccode", "year"))
wooldridge <- plm(residual~lag_res, model="pooling", data=res_df)
wooldridge_stat <- (coef(wooldridge)[2]+.5) / (sqrt(diag(vcov(wooldridge))[2]))
round(pchisq(wooldridge_stat, 1, lower.tail = F), digits=3)
fd$l2_lmilex=lag(fd$d_lmilex, 2)
ah<-ivreg(d_lmilex~lag_lmilex+d_polyarchy| l2_lmilex+d_polyarchy, data=fd )
summary(ah)
setwd("C:/Users/mhauenst/tscs_demo")
