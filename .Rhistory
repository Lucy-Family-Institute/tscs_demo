install.packages("tidyverse")
install.packages("rtools")
install.packages("Rtools")
install.packages("arrow")
install.packages("rms")
installed.packages("MASS")
install.packages("AppliedPredictiveModeling")
install.packages("caret")
install.packages("randomForest")
install.packages("tidytext")
install.packages("tensorflow")
install.packages("ColorDistance")
install.packages("colordistance")
install.packages(mars)
install.packages("mars")
((9/5)*2 + (5/3)*2 + 8)/8
treat = rbinom(10000, 1, .5)
table(treat)
source("~/.active-rstudio-document", echo=TRUE)
summary(lm(Y1~treat))
summary(lm(Y2~treat))
Y2 = 3 + 2*treat + Y1+ rnorm(10000, 0, 1)
summary(lm(Y2~treat))
summary(lm(Y2~treat+Y1))
-2.187602  -53.856965
data<-read.dta13("ms_mil_spend_data.dta")
#install.packages(c("tidyverse", "data.table", "readstata13", "plm", "bife", "survival", "brglm2", "ivreg", "lmtest"))
library("tidyverse")
library("data.table")
library("readstata13")
library("plm")
library("bife")
library("survival")
library("brglm2")
library("ivreg")
library("lmtest")
#setwd()
set.seed(1015)
data<-read.dta13("ms_mil_spend_data.dta")
data %>%
filter(ccode==2, year==2000)
data <- pdata.frame(data, index = c("ccode", "year"))
data
purtest(data)
purtest(data$LMILEX)
purtest(data$LMILEX, test = "levinlin")
purtest(data=data$LMILEX, test = "levinlin", )
purtest(object=data$LMILEX, test = "levinlin", )
purtest(object=data$LMILEX, test = "levinlin", lags="AIC")
purtest(object=data$LMILEX, test = "levinlin", lags="AIC", pmax=1)
purtest(object=data$LMILEX, test = "levinlin", lags="AIC", pmax=5)
purtest(object=data$LMILEX, test = "levinlin", lags="AIC", pmax=3)
purtest(object=data[data$ccode<=20,]$LMILEX, test = "levinlin", lags="AIC", pmax=3)
data[data$ccode<=20,]$LMILEX[]
data[data$ccode<=20,]$LMILEX]
data[data$ccode<=20,]$LMILEX
summary(data)
summary(data$LMILEX)
purtest(object=data[data$ccode<=20,]$LMILEX, test = "Pm", lags="AIC", pmax=3)
purtest(object=data$LMILEX, test = "Pm", lags="AIC", pmax=3)
purtest(object=data$LMILEX, test = "Pm", lags="AIC", pmax=1)
test = data[data$ccode==2,]
test
test$LMILEX
plot(test$LMILEX)
plot(data$LMILEX)
purtest(object=test$LMILEX, test = "Pm", lags="AIC", pmax=1)
purtest(object=data[data$ccode==20,]$LMILEX, test = "Pm", lags="AIC", pmax=1)
purtest(object=data[data$ccode==20 | data$ccode==2,]$LMILEX, test = "Pm", lags="AIC", pmax=1)
library(purtest)
library(punitroots)
install.packages("punitroots")
library(punitroots)
library(punitroots)
install.packages("punitroots", repos="http://R-Forge.R-project.org")
library(punitroots)
library(punitroots)
purtest(object=test$LMILEX, test = "madwu", lags="AIC", pmax=1)
purtest(object=test$LMILEX, test = "madwu", lags="AIC", pmax=5)
purtest(object=data$LMILEX, test = "madwu", lags="AIC", pmax=5)
purtest(object=data$LMILEX, test = "madwu", lags="AIC", pmax=2)
purtest(object=data$LMILEX, test = "madwu", lags="AIC", pmax=1)
purtest(object=data[data$ccode==40,]$LMILEX, test = "madwu", lags="AIC", pmax=1)
purtest(object=data[data$ccode=="365-1951",]$LMILEX, test = "madwu", lags="AIC", pmax=1)
purtest(object=data[data$ccode=="365",]$LMILEX, test = "madwu", lags="AIC", pmax=1)
purtest(object=data[data$ccode=="365",]$LMILEX, test = "madwu", pmax=1)
purtest(object=data$LMILEX, test = "madwu", pmax=1)
purtest(object=na.omit(data$LMILEX), test = "madwu", pmax=1)
test
test$LMILEX
summary(test$LMILEX)
summary(data[data$ccode==41,]$LMILEX)
data[data$ccode==41,]$LMILEX
purtest(object=data[data[data$ccode==41,]$LMILEX, test = "madwu", pmax=1)
purtest(object=data[data$ccode==41,]$LMILEX, test = "madwu", pmax=1)
hold<-purtest(object=data[data$ccode==41,]$LMILEX, test = "madwu", pmax=1)
hold
hold$statistic
hold$adjval
hold
summary(hold)
library(tseries)
install.packages(tseries)
install.packages("tseries")
library(tseries)
adf.test(data[data$ccode==2, "LMILEX"])
?adf.test
adf.test(data[data$ccode==2, "LMILEX"], k = 1)
adf.test(data[data$ccode==2, "LMILEX"], k = 1, alternative = "exp")
adf.test(data[data$ccode==20, "LMILEX"], k = 1, alternative = "exp")
hold<-adf.test(data[data$ccode==20, "LMILEX"], k = 1, alternative = "exp")
hold$p.value
unique(ccode)
unique(data$ccode)
hold<-adf.test(data[data$ccode==42, "LMILEX"], k = 1, alternative = "exp")
hold
for(i in unique(data$ccode)){
print(i)
}
pvals <- NA
for (i in unique(data$ccode)){
dfuller <- adf.test(data[data$ccode==i, "LMILEX"], k = 1,
alternative = "exp")
pvals<-rbind(pvals, dfuller$p.value)
}
i
hold<-adf.test(data[data$ccode=="346, "LMILEX"], k = 1, alternative = "exp")
hold<-adf.test(data[data$ccode==346, "LMILEX"], k = 1, alternative = "exp")
adf.test(data[data$ccode==346, "LMILEX"], k = 1, alternative = "exp")
for (i in unique(data$ccode)){
try(dfuller <- adf.test(data[data$ccode==i, "LMILEX"], k = 1,
alternative = "exp"))
pvals<-rbind(pvals, dfuller$p.value)
}
pvales
pvals
?adf.test
pvals <- NA
for (i in unique(data$ccode)){
dfuller <- adf.test(data[data$ccode==i, "LMILEX"], k = 1,)
pvals<-rbind(pvals, dfuller$p.value)
}
pvals <- NA
for (i in unique(data$ccode)){
dfuller <- adf.test(data[data$ccode==i, "LMILEX"], k = 1)
pvals<-rbind(pvals, dfuller$p.value)
}
pvals
library(urca)
?urca::ur.df()
ur.df(y = data[data$ccode==2,"LMILEX"])
data[data$ccode==2,"LMILEX"]
data<-read.dta13("ms_mil_spend_data.dta")
setwd("C:/Users/mhauenst/tscs_demo")
setwd("C:/Users/mhauenst/tscs_demo")
data<-read.dta13("ms_mil_spend_data.dta")
ur.df(y = data[data$ccode==2,"LMILEX"])
ur.df(y = data[data$ccode==2,"LMILEX"], type="none")
ur.df(y = data[data$ccode==2,"LMILEX"], type="none", lags=1)
ur.df(y = data[data$ccode==2,"LMILEX"], type="drift", lags=1)
ur.df(y = data[data$ccode==2,"LMILEX"], type="none", lags=1)
test<-ur.df(y = data[data$ccode==2,"LMILEX"], type="none", lags=1)
test
pvals
pvals<-na.omit(pvals)
pvals<-ln(pvals)
pvals<-log(pvals)
pvals
sum(pvals)
-2*sum(pvals)
pdat<-pdata.frame(data)
pdat<-pdata.frame(data, index = c("ccode", "year"))
pdat$d_lmilex = diff(fd$LMILEX)
pdat$d_lmilex = diff(pdat$LMILEX)
pdat$ld_milex = lag(pdatd_milex)
pdat$ld_milex = lag(pdat$d_milex)
?lag
plm::lag
?plm::lag
pdat$ld_milex = diff(pdat$d_milex, lag=1)
lm(LMILEX~ld_milex+l_milex)
lm(LMILEX~ld_milex+l_milex, data=pdat[pdat$ccode==2,])
pdat$ld_milex = diff(pdat$d_lmilex, lag=1)
lm(LMILEX~ld_milex+l_milex, data=pdat[pdat$ccode==2,])
lm(LMILEX~ld_milex+d_lmilex, data=pdat[pdat$ccode==2,])
adf.test(data[data$ccode==i, "LMILEX"], k = 1)
adf.test(data[data$ccode==2, "LMILEX"], k = 1)
test<-adf.test(data[data$ccode==2, "LMILEX"], k = 1)
test$p.value
-2*sum(log(pvals))
#Choi's P-value
-2*sum(log(na.omit(pvals)))
-2*sum(log(na.omit(pvals)))
pvals
sum(pvals)
pvals <- NA
for (i in unique(data$ccode)){
try(dfuller <- adf.test(data[data$ccode==i, "LMILEX"], k = 1))
pvals<-rbind(pvals, dfuller$p.value)
}
pvals
sum(pvals)
-2*sum(log(na.omit(pvals)))
nrow(na.omit(pvals))
pvals <- NA
for (i in unique(data$ccode)){
try(dfuller <- adf.test(data[data$ccode==i, "LMILEX"], k = 1))
pvals<-rbind(pvals, dfuller$p.value)
}
pvals
#Choi's P-value
test_stat<- -2*sum(log(na.omit(pvals)))
#That's going to reject, but let's get a p-value for fun
#Test is distributed chi2(2N) where N is panels
pchisq(test_stat, df=nrow(na.omit(pvals)), lower.tail = F)
round(pchisq(test_stat, df=nrow(na.omit(pvals)), lower.tail = F), digits=3)
round(pchisq(test_stat, df=2*nrow(na.omit(pvals)), lower.tail = F), digits=3)
pchisq(10.1933, df=4, lower.tail = F)
pvals<-NULL
pvals
cbind(pvals, 1)
pvals
rbind(pvals, 1)
pvals<-NULL
rbind(pvals, 1)
#install.packages(c("tidyverse", "data.table", "readstata13", "plm", "bife", "survival", "brglm2", "ivreg", "lmtest", "tseries"))
library("tidyverse")
library("tseries")
library("data.table")
library("readstata13")
library("plm")
library("bife")
library("survival")
library("brglm2")
library("ivreg")
library("lmtest")
#setwd()
set.seed(1015)
sample <- 200
x <- rnorm(sample, 0, 2)
e <- rnorm(sample, 0 , 1)
y <- 3 + x + e
univariate <- data.frame(y, x)
univariate
plot<-univariate %>%
ggplot(aes(x, y)) +
geom_point()
plot
univariate$pred <- cbind(predict(lm(y~x, data=univariate)))
univariate
univariate$pred <- cbind(predict(lm(y~x, data=univariate)))
univariate$resid <- univariate$y - univariate$pred
univariate
plot +
geom_smooth(method = "lm")
plot +
geom_smooth(method = "lm", se=F)
sample <- 200
x <- rnorm(sample, 0, 2)
e <- rnorm(sample, 0 , 3)
y <- 3 + x + e
univariate <- data.frame(y, x)
univariate
plot<-univariate %>%
ggplot(aes(x, y)) +
geom_point()
plot
univariate$pred <- predict(lm(y~x, data=univariate))
univariate$resid <- univariate$y - univariate$pred
plot +
geom_smooth(method = "lm", se=F)
univariate$pred <- predict(lm(y~x, data=univariate))
univariate$resid <- univariate$y - univariate$pred
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_segment(aes(xend = y, yend = predicted, color = "resid")) +
univariate$pred <- predict(lm(y~x, data=univariate))
univariate$resid <- univariate$y - univariate$pred
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_segment(aes(xend = y, yend = predicted)) +
univariate$pred <- predict(lm(y~x, data=univariate))
univariate$resid <- univariate$y - univariate$pred
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_segment(aes(xend = y, yend = predicted))
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_segment(aes(xend = y, yend = pred))
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_smooth(method = "lm", se=F)
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_smooth(method = "lm", se=F)+
geom_segment(aes(xend = y, yend = pred))
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_smooth(method = "lm", se=F)+
geom_segment(aes(ystart = y, yend = pred))
?geom_segment()
univariate$pred <- predict(lm(y~x, data=univariate))
univariate$resid <- univariate$y - univariate$pred
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_smooth(method = "lm", se=F)+
geom_segment(aes(xend=x, yend = pred))
univariate %>%
ggplot(aes(x, y)) +
geom_point()+
geom_smooth(method = "lm", se=F)+
geom_segment(aes(xend=x, yend = pred), color="red")
coef(lm(y~x, data=univariate))
coef(lm(y~x, data=univariate))
mean_x <- mean(x)
mean_y <- mean(y)
beta1_hat <-((univariate$x - mean_x)(univariate$y - mean_y))/((univariate$x-mean_x)^2)
beta1_hat <-((univariate$x - mean_x)*(univariate$y - mean_y))/((univariate$x-mean_x)^2)
beta1_hat
beta1_hat <-(sum((univariate$x - mean_x)*(univariate$y - mean_y)))/(sum((univariate$x-mean_x)^2))
beta1_hat
coef(lm(y~x, data=univariate))
mean_x <- mean(x)
mean_y <- mean(y)
beta1_hat <-(sum((univariate$x - mean_x)*(univariate$y - mean_y)))/(sum((univariate$x-mean_x)^2))
print(beta0_hat, beta1_hat)
coef(lm(y~x, data=univariate))
mean_x <- mean(x)
mean_y <- mean(y)
beta1_hat <-(sum((univariate$x - mean_x)*(univariate$y - mean_y)))/(sum((univariate$x-mean_x)^2))
beta0_hat <- mean_y - beta1_hat*mean_x
print(beta0_hat, beta1_hat)
coef(lm(y~x, data=univariate))
mean_x <- mean(x)
mean_y <- mean(y)
beta1_hat <-(sum((univariate$x - mean_x)*(univariate$y - mean_y)))/(sum((univariate$x-mean_x)^2))
beta0_hat <- mean_y - beta1_hat*mean_x
print(c(beta0_hat, beta1_hat))
